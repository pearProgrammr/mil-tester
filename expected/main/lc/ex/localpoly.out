-----------------------------------------
-- not recursive
b5 :: forall (a :: *). [a] >>= [a]
b5[t0] =
  return t0

-----------------------------------------
-- not recursive
k3 :: forall (a :: *). {} [a] ->> [a]
k3{} t0 = b5[t0]

-----------------------------------------
-- not recursive
b6 :: forall (a :: *). [] >>= [[a] ->> [a]]
b6[] =
  t0 <- k3{}
  return t0

-----------------------------------------
-- not recursive
id0 :: forall (a :: *). [a] ->> [a]
id0 <-
  b6[]

-----------------------------------------
-- not recursive
b3 :: forall (a :: *). [a] >>= [a]
b3[t0] =
  t1 <- return id0
  t2 <- t1 @ id0
  t3 <- return t2
  t4 <- t3 @ id0
  t5 <- return t4
  t5 @ t0

-----------------------------------------
-- not recursive
k2 :: forall (a :: *). {} [a] ->> [a]
k2{} t0 = b3[t0]

-----------------------------------------
-- not recursive
b4 :: forall (a :: *). [] >>= [[a] ->> [a]]
b4[] =
  t0 <- k2{}
  return t0

-----------------------------------------
-- not recursive
entrypoint f :: forall (a :: *). [a] ->> [a]
f <-
  b4[]

-----------------------------------------
-- Entrypoints: f
