-----------------------------------------
-- not recursive
b69 :: [] >>= [Word]
b69[] =
  return 1

-----------------------------------------
-- not recursive
b67 :: [] >>= [Word]
b67[] =
  return 0

-----------------------------------------
-- recursive
b85 :: [Word] >>= [Word]
b85[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b69[]
    else b70[t0]
b70 :: [Word] >>= [Word]
b70[t0] =
  t1 <- add((t0, -1))
  t2 <- b89[t1]
  t3 <- add((t0, -2))
  t4 <- b89[t3]
  add((t2, t4))
b89 :: [Word] >>= [Word]
b89[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b67[]
    else b85[t0]

-----------------------------------------
-- not recursive
b64 :: [] >>= [Word]
b64[] =
  t0 <- b89[14]
  t1 <- b89[13]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint fib15 :: Word
fib15 <-
  b64[]

-----------------------------------------
-- not recursive
b65 :: [] >>= [Word]
b65[] =
  t0 <- b89[11]
  t1 <- b89[10]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint fib12 :: Word
fib12 <-
  b65[]

-----------------------------------------
-- not recursive
k43 :: {} [Word] ->> [Word]
k43{} t0 = b89[t0]

-----------------------------------------
-- not recursive
entrypoint fib :: [Word] ->> [Word]
fib <-
  k43{}

-----------------------------------------
-- Entrypoints: fib15 fib12 fib
