data Maybe2
  = Nothing4
  | Just5 Word

data Maybe0
  = Nothing0
  | Just1 Word

data Maybe1
  = Nothing2
  | Just3 Word

-----------------------------------------
-- not recursive
b8 :: forall (a :: *). [a] >>= [a]
b8[t0] =
  return t0

-----------------------------------------
-- not recursive
b7 :: forall (a :: tuple). [[Word] ->> a, Word] >>= a
b7[t0, t1] =
  t2 <- add((t1, 1))
  t0 @ t2

-----------------------------------------
-- not recursive
entrypoint genIncM1 :: [Maybe0, [Word] ->> [Maybe0], Word] >>= [Maybe0]
genIncM1[t0, t1, t2] =
  t3 <- primUlt((t2, 0))
  if t3
    then b7[t1, t2]
    else b8[t0]

-----------------------------------------
-- not recursive
entrypoint genIncM7 :: [Maybe1, [Word] ->> [Maybe1], Word] >>= [Maybe1]
genIncM7[t0, t1, t2] =
  t3 <- primUlt((t2, 6))
  if t3
    then b7[t1, t2]
    else b8[t0]

-----------------------------------------
-- not recursive
entrypoint genIncM64 :: [Maybe2, [Word] ->> [Maybe2], Word] >>= [Maybe2]
genIncM64[t0, t1, t2] =
  t3 <- primUlt((t2, 63))
  if t3
    then b7[t1, t2]
    else b8[t0]

-----------------------------------------
-- not recursive
Nothing :: Maybe0
Nothing <-
  Nothing0()

-----------------------------------------
-- not recursive
b29 :: [] >>= [Maybe0]
b29[] =
  return Nothing

-----------------------------------------
-- not recursive
b28 :: [Word] >>= [Maybe0]
b28[t0] =
  t1 <- add((t0, 1))
  Just1(t1)

-----------------------------------------
-- not recursive
entrypoint incIx1 :: [Word] >>= [Maybe0]
incIx1[t0] =
  t1 <- primUlt((t0, 0))
  if t1
    then b28[t0]
    else b29[]

-----------------------------------------
-- not recursive
s1 :: Maybe1
s1 <-
  Nothing2()

-----------------------------------------
-- not recursive
b31 :: [] >>= [Maybe1]
b31[] =
  return s1

-----------------------------------------
-- not recursive
b30 :: [Word] >>= [Maybe1]
b30[t0] =
  t1 <- add((t0, 1))
  Just3(t1)

-----------------------------------------
-- not recursive
entrypoint incIx7 :: [Word] >>= [Maybe1]
incIx7[t0] =
  t1 <- primUlt((t0, 6))
  if t1
    then b30[t0]
    else b31[]

-----------------------------------------
-- not recursive
s3 :: Maybe2
s3 <-
  Nothing4()

-----------------------------------------
-- not recursive
b33 :: [] >>= [Maybe2]
b33[] =
  return s3

-----------------------------------------
-- not recursive
b32 :: [Word] >>= [Maybe2]
b32[t0] =
  t1 <- add((t0, 1))
  Just5(t1)

-----------------------------------------
-- not recursive
entrypoint incIx64 :: [Word] >>= [Maybe2]
incIx64[t0] =
  t1 <- primUlt((t0, 63))
  if t1
    then b32[t0]
    else b33[]

-----------------------------------------
-- Entrypoints: genIncM1 genIncM7 genIncM64 incIx1 incIx7 incIx64
